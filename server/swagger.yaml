openapi: 3.0.0
info:
  title: Smart Inventory Optimizer API
  description: API documentation for the Smart Inventory Optimizer project
  version: 1.0.0

servers:
  - url: https://smart-inventory-optimizer.vercel.app/
    description: SIO API
  - url: http://localhost:2000
    description: Local server

paths:
  /api/statistics/products-revenues:
    get:
      summary: Get revenue of all products for a specific business
      description: Returns a paginated list of product revenues for the authenticated business.
      operationId: getProductsRevenues
      tags:
        - Statistics
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default is 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page (default is 10)
          required: false
          schema:
            type: integer
            default: 10
        - name: orderBy
          in: query
          description: Order results by revenue ("asc" for ascending, "desc" for descending, default is "desc")
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: desc
      responses:
        "200":
          description: Successful response with a list of product revenues
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the product
                        totalRevenue:
                          type: number
                          format: double
                          description: Total revenue generated by the product
        "401":
          description: Unauthorized - Authentication token is missing or invalid
        "500":
          description: Internal Server Error

  /api/statistics/products-stock:
    get:
      summary: Get products with low current stock levels
      description: Returns a paginated list of products that have stock levels less than or equal to 20 for the authenticated business.
      operationId: getProductsStock
      tags:
        - Statistics
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          description: Page number for pagination (default is 1)
          required: false
          schema:
            type: integer
            default: 1
        - name: limit
          in: query
          description: Number of items per page (default is 10)
          required: false
          schema:
            type: integer
            default: 10
        - name: orderBy
          in: query
          description: Order results by stock level ("asc" for ascending, "desc" for descending, default is "asc")
          required: false
          schema:
            type: string
            enum: [asc, desc]
            default: asc
      responses:
        "200":
          description: Successful response with a list of products with low stock levels
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      type: object
                      properties:
                        name:
                          type: string
                          description: Name of the product
                        currentStock:
                          type: integer
                          description: Current stock level of the product
        "401":
          description: Unauthorized - Authentication token is missing or invalid
        "500":
          description: Internal Server Error

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
